
# some cmd 
```

firewall-cmd --reload
firewall-cmd --permanent --list-all --zone=public
firewall-cmd --permanent --list-all --zone=trusted

docker exec -it openwrt /bin/sh
docker stop openwrt && docker rm openwrt
docker run -it -d -p 8888:80 -p 8020:443 --restart always --name openwrt trojango /sbin/init

docker run -it -d -p 8888:80 -p 8020:443 -v /root/ssl:/opt/ssl --name openwrt trojango:v0 /sbin/init
```

# set ssh port 
	```
	firewall-cmd --zone=public --add-port=58899/tcp --permanent
	firewall-cmd --reload && firewall-cmd --permanent --list-all --zone=public
	cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak

	vi /etc/ssh/sshd_config


	systemctl restart sshd

	yum provides semanage
	yum -y install policycoreutils-python

	semanage port -a -t ssh_port_t -p tcp 58899
	semanage port -l | grep ssh
	semanage port -d -t ssh_port_t -p tcp 22
	semanage port -l | grep ssh
	firewall-cmd --zone=public --remove-port=22/tcp --permanent && firewall-cmd --reload 
	```

# set all fire rule
	```
	systemctl stop firewalld && yum -y upgrade firewalld
	systemctl enable firewalld && systemctl restart firewalld


	firewall-cmd --permanent --zone=trusted --add-port=8099/tcp 
	firewall-cmd --permanent --zone=trusted --add-port=80/tcp --add-port=443/tcp --add-port=8888/tcp 
	firewall-cmd --permanent --zone=public  --add-forward-port=port=443:proto=tcp:toport=8020
	firewall-cmd --permanent --zone=public  --add-masquerade 
	firewall-cmd --permanent --zone=trusted --add-masquerade 
	firewall-cmd --reload

	```
# install all tools 
		```
		yum -y install wget net-tools bridge-utils && yum -y install epel-release && yum -y install unar
		wget --no-check-certificate -O caddy_install.sh https://raw.githubusercontent.com/caonimagfw/Caddy/master/caddy_install.sh && bash caddy_install.sh

cat > /usr/local/caddy/Caddyfile <<-EOF
	:80 {
		redir https://{host}
	}

	:8099 {
		root /usr/local/caddy/www
		gzip
	}

EOF
cat /usr/local/caddy/Caddyfile 


	service caddy restart 

		```
# bbr plus 
	```
	wget --no-check-certificate -O onefast.sh https://raw.githubusercontent.com/caonimagfw/onefast/master/onefast.sh && bash onefast.sh

	# please restart the machine 

	sysctl net.ipv4.tcp_available_congestion_control
	sysctl net.ipv4.tcp_congestion_control
	sysctl net.core.default_qdisc
	lsmod | grep bbr
	sysctl -w net.ipv4.ip_forward=1

	```

# docker 
	```
	yum install -y yum-utils device-mapper-persistent-data lvm2
	yum-config-manager \
	    --add-repo \
	    https://download.docker.com/linux/centos/docker-ce.repo
	yum makecache fast
	yum list docker-ce --showduplicates | sort -r
	yum -y install docker-ce-19.03.11 docker-ce-cli-19.03.11 containerd.io

	systemctl restart docker  
		
	iptables -t nat -F 
	ifconfig docker0 down 
	brctl delbr docker0 
	systemctl restart firewalld && systemctl restart docker


	firewall-cmd --permanent --zone=trusted --add-interface=docker0 && firewall-cmd --reload


	#ssl 
	mkdir /root/ssl && cd /root/ssl 
	wget --no-check-certificate  https://github.com/caonimagfw/LuyouFrame/raw/master/18.06.8/Mine/gfw.com/gfw.com.key.rar
	unar -D -o gfw.com -p xxxx gfw.com.key.rar && rm -rf *.rar


	mkdir /root/docker && cd /root/docker 
	wget --no-check-certificate  https://github.com/caonimagfw/LuyouFrame/raw/master/18.06.8/Mine/gfw.com/gfw.com.docker.rar
	unar -D -p xxxx gfw.com.docker.rar && rm -rf *.rar

	docker import gfw.com.tar trojango
	docker run -itd -v /root/ssl:/opt/ssl -p 8888:80 -p 8020:443 --restart always --name openwrt trojango /sbin/init

	docker exec -it openwrt /bin/sh
		killall trojan-go 
		/etc/init.d/uhttpd  stop


	#docker stop openwrt && docker rm openwrt


	# remove docker -----------------------------------------------------

	# yum remove docker \
	                  docker-client \
	                  docker-client-latest \
	                  docker-common \
	                  docker-latest \
	                  docker-latest-logrotate \
	                  docker-logrotate \
	                  docker-engine
	yum list installed | grep docker

	yum -y remove xxxx
	# remove docker -----------------------------------------------------



# error fixed 
	```
	# recreate docker 
	systemctl stop docker t
	iptables -t nat -F 
	ifconfig docker0 down 
	brctl delbr docker0 
	systemctl restart firewalld && systemctl restart docker

	# 1--- iproute: "ip -4 neigh flush dev eth0" hangs up 
	kill that ID

	# 2--- ping mtu package 
	ping -s $((110 - 28)) www.google.com

	cat /lib/preinit/10_indicate_preinit
	cat /proc/$(pgrep -of kworker)/stack
	cat /proc/000/stack

	apt-get install trace-cmd

	装上后运行一段时间查看

	trace-cmd record -e workqueue:workqueue_queue_work

	trace-cmd report > result
	awk '{print $7}' result|sort|uniq -c

	把结果保存到result后，进行分析结果得出：
	gc_work nf_conntrack

	```


# container
	```
	docker commit -p idid  name:v2

	#export and import 
	#save and load

	#export 
	docker images
	docker export d65 > /usr/local/caddy/www/v0.tar

	#import 
	docker import xx.tar openwrt

	```

# mips mipsel
```
# go 1.4.4
set CGO_ENABLE=0
set GOOS=linux
set GOARCH=mipsle
set GOMIPS=softfloat
go build -tags "client" -ldflags "-s -w"

set CGO_ENABLE=0
set GOOS=linux
set GOARCH=mips
set GOMIPS=softfloat
go build -tags "client" -ldflags "-s -w"

```


#  rust 
trojan [OPTIONS] --local-addr <local-addr> --password <password> <SUBCOMMAND>
firewall-cmd --add 

firewall-cmd --permanent --zone=public --add-port=3333/tcp
firewall-cmd --reload


mkdir trojan-rs 
cd trojan-rs 

wget https://github.com/caonimagfw/trojan/raw/master/linux/trojan-rs-0.32
chmod 777 trojan-rs-0.32

cd /root/trojan-rs 
./trojan-rs-0.32 server -r 127.0.0.1:8099 -a 0.0.0.0:3333 -p caonima2020 -n "h2"  -k /root/ssl/gfw.com/gfw.com.key -c /root/ssl/gfw.com/gfw.com.key

./trojan-rs-0.32  server -k /root/ssl/gfw.com/gfw.com.key -c /root/ssl/gfw.com/gfw.com.key -r 127.0.0.1:8099  --local-addr 0.0.0.0:3333


./trojan-rs-0.32 server -r 127.0.0.1:8099 -a 0.0.0.0:3333 -p caonima2020 -n "h2"  -k /root/ssl/gfw.com/gfw.com.key -c /root/ssl/gfw.com/gfw.com.key

-r 127.0.0.1:8099 -a 0.0.0.0:3333 -p caonima2020 -n "h2" 


firewall-cmd --zone=public --list-all

./trojan-rs-0.32  server -k /root/ssl/gfw.com/gfw.com.key -c /root/ssl/gfw.com/gfw.com.key -r 127.0.0.1:8099  --local-addr 0.0.0.0:3333


cd /root/trojan-rs 


./trojan-rs-0.32 -p caonima2020  -a 0.0.0.0:3333 server -k /root/ssl/gfw.com/gfw.com.key -c /root/ssl/gfw.com/gfw.com.crt -r 127.0.0.1:8099 `RUST_BACKTRACE=1` 



sudo yum install gcc
sudo yum install wget


wget http://ftp.gnu.org/gnu/glibc/glibc-2.18.tar.gz
tar  -xvf  glibc-2.18.tar.gz
cd glibc-2.18
mkdir  glibc-build
cd  glibc-build
../configure  --disable-sanity-checks
make -j3
make install


# cd glibc-2.18
# mkdir build && cd build/


wget http://ftp.gnu.org/gnu/glibc/glibc-2.18.tar.gz
tar  -xvf  glibc-2.18.tar.gz
cd glibc-2.18
mkdir  glibc-build
cd  glibc-build
../configure  --disable-sanity-checks
../configure --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin
make -j4
make install
strings /lib64/libc.so.6 |grep GLIBC_



# make install
--- 解决中文乱码问题
# make localedata/install-locales
--- 检查验证
# ll /lib64/libc*
--- 查看系统glibc支持的版本
# strings /lib64/libc.so.6 |grep GLIBC
# /lib64/libc.so.6

strings /lib64/libc.so.6 |grep GLIBC_



/root/trojan-rs/trojan-rs-0.32 -L 0 -p caonima2020  -a 0.0.0.0:3333 server -k /root/ssl/gfw.com/gfw.com.key -c /root/ssl/gfw.com/gfw.com.crt -r 127.0.0.1:8099

cat /root/ssl/gfw.com/gfw.com.key
cat /root/ssl/gfw.com/gfw.com.crt

 -- RUST_BACKTRACE=1

 firewall-cmd --zone=public --list-all


 firewall-cmd --permanent --zone=public --add-port=80/tcp
firewall-cmd --reload

```````
/root/trojan-rs/trojan-rs-0.32 -L 2 -p caonima2020  -a 0.0.0.0:3333 server -k /root/ssl/update-2y/update-2y.privkey.pem -c /root/ssl/update-2y/update-2y.cert.pem -r 

/root/trojan-rs/trojan-rs-0.32 -L 2 -p caonima2020  -a 0.0.0.0:3333 server -k  /root/ssl/gfw.com/gfw.com.key  -c /root/ssl/gfw.com/gfw.com.crt  -r 127.0.0.1:8099


127.0.0.1:8099



nohup /root/trojan-rs/trojan-rs-0.32 -L 5 -l /tmp/trojan-rs.log -p caonima2020  -a 0.0.0.0:3333 server -k /root/ssl/update-2y/update-2y.privkey.pem -c /root/ssl/update-2y/update-2y.cert.pem -r 127.0.0.1:8099 > /dev/null 2>&1 &




nohup java FileTest  > /dev/null 2>&1 & 

yum -y install wget
wget https://raw.githubusercontent.com/caonimagfw/ssr/master/go-docker/go-docker.sh

#cxthhhhh.com

wget --no-check-certificate https://raw.githubusercontent.com/caonimagfw/ssr/master/go-docker/Network-Reinstall-System-Modify.sh 
chmod a+x Network-Reinstall-System-Modify.sh

bash Network-Reinstall-System-Modify.sh -CentOS_7

http://127.0.0.1:8099/CentOS_7.X_NetInstallation.vhd.gz


---

wget https://github.com/caonimagfw/ssr/raw/master/reinstall/CentOS-7.img.part1.rar
wget https://github.com/caonimagfw/ssr/raw/master/reinstall/CentOS-7.img.part2.rar
wget https://github.com/caonimagfw/ssr/raw/master/reinstall/CentOS-7.img.part3.rar
wget https://github.com/caonimagfw/ssr/raw/master/reinstall/CentOS-7.img.part4.rar
wget https://github.com/caonimagfw/ssr/raw/master/reinstall/CentOS-7.img.part5.rar
wget https://github.com/caonimagfw/ssr/raw/master/reinstall/CentOS-7.img.part6.rar

unar -D CentOS-7.img.part1.rar
rm -rf CentOS-7.img.part*

cp CentOS-7.img.gz /usr/local/caddy/www


m-or.bmwpay.net
https://xxxx:xxxx/CentOS-7.img.gz

https://m-or.bmwpay.net/CentOS-7.img.gz


bash AutoReinstall.sh

------


cat CentOS_7.X_NetInstallation.vhd.part* > CentOS_7.X_NetInstallation.vhd.rar
rm -rf /CentOS_7.X_NetInstallation.vhd.pa*
unar -D  CentOS_7.X_NetInstallation.vhd.rar
rm -rf CentOS_7.X_NetInstallation.vhd.rar

wget https://raw.githubusercontent.com/caonimagfw/ssr/master/go-docker/AutoReinstall.sh
bash AutoReinstall.sh
https://m-or.bmwpay.net/CentOS-7.img.gz


http://127.0.0.1:8099/CentOS_7.X_NetInstallation.vhd.gz


wget –no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh && bash AutoReinstall.sh


https://ldpan.com/d/os/dd/cxthhhhh/CentOS_7.X_NetInstallation.vhd.gz



RedHat/CentOS:
yum install -y xz openssl gawk file

②. Debian/Ubuntu:
apt-get install -y xz-utils openssl gawk file



wget -N –no-check-certificate https://raw.githubusercontent.com/veip007/dd/master/dd-od.sh && chmod +x dd-od.sh && ./dd-od.sh


----
wget https://raw.githubusercontent.com/caonimagfw/ssr/master/go-docker/AutoReinstall.sh
bash AutoReinstall.sh
8
https://m-or.bmwpay.net/CentOS-7.img.gz


BOOTPROTO=none
DEFROUTE=yes
DEVICE=eth0
GATEWAY=x.x.x.1
IPADDR=x.x.x.x
IPV6INIT=no
NETMASK=255.255.255.192
NM_CONTROLLED=no
ONBOOT=yes
TYPE=Ethernet
USERCTL=no
DNS1=8.8.8.8

-----


[root@miv-10 ~]# IPADDR=5.252.177.218
[root@miv-10 ~]#
