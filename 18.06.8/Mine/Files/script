apt-get install subversion build-essential libncurses5-dev zlib1g-dev gawk git ccache gettext libssl-dev xsltproc wget unzip python

wget https://downloads.openwrt.org/releases/18.06.8/targets/ramips/mt7621/openwrt-imagebuilder-18.06.8-ramips-mt7621.Linux-x86_64.tar.xz
sudo apt-get install xz-utils
unxz openwrt-imagebuilder-18.06.8-ramips-mt7621.Linux-x86_64.tar.xz
tar -xvjf openwrt-imagebuilder-18.06.8-ramips-mt7621.Linux-x86_64.tar.xz
tar -xvf openwrt-imagebuilder-18.06.8-ramips-mt7621.Linux-x86_64.tar
cd openwrt-imagebuilder-18.06.8-ramips-mt7621.Linux-x86_64.tar

vi /etc/pam.d/common-password
make info

tar -xvjf openwrt-sdk-18.06.8-ramips-mt7621_gcc-7.3.0_musl.Linux-x86_64.tar.xz
unxz openwrt-sdk-18.06.8-ramips-mt7621_gcc-7.3.0_musl.Linux-x86_64.tar.xz
tar -xvf openwrt-sdk-18.06.8-ramips-mt7621_gcc-7.3.0_musl.Linux-x86_64.tar
共有三个传递的参数：PROFILE PACKAGES FILES

make image PROFILE=newifi-d1 PACKAGES="$(<plugin.f)" FILES=files/

make image PROFILE=newifi-d1 PACKAGES="luci-i18n-chinese luci-sgi-uhttpd luci-app-qos luci-app-upnp luci-proto-ipv6" FILES=files/
cat 
command `< file`

opkg 
--force-depends \
--force-overwrite \

cat > plugin.f  << EOF
luci-i18n-base-zh-cn luci-theme-bootstrap luci-app-qos luci-app-squid luci-app-ssr-plus luci-app-upnp luci-proto-ipv6
EOF
make image PROFILE=newifi-d1 PACKAGES="$(<plugin.f)" FILES=files/

---------
cat > plugin.f  << EOF
pdnsd-alt microsocks ipt2socks dns2socks luci-app-wol luci-i18n-base-zh-cn luci-theme-bootstrap luci-app-qos luci-proto-ipv6 luci-app-ssr-plus
EOF
make image PROFILE=newifi-d1 PACKAGES="$(<plugin.f)" -b  FILES=files/


luci-i18n-base-zh-cn shadowsocksr-libev-alt pdnsd-alt microsocks ipt2socks dns2socks shadowsocksr-libev-ssr-local luci-app-ssr-plus luci-app-adbyby-plus

  shadowsocksr-libev-alt
 *      pdnsd-alt
 *      microsocks
 *      ipt2socks
 *      dns2socks
 *      shadowsocksr-libev-ssr-local



PAKAGES后面罗列出需要添加到固件中的额外的包，不填写的话只包含预定义的需要的最少的包，如果前面以"-"符号开头的表示不不含这个包，比如说：PACKAGES="luci luci-i18n-chinese -pppox"

luci

luci-i18n-chinese    # 中文支持

luci-sgi-uhttpd      # 默认开启utttpd，刷机后可直接网页访问luci
luci-app-qos         # QOS
luci-app-upnp        # UPNP
luci-proto-ipv6      # 向luci添加ipv6相关协议的完整支持


mv target/linux/ramips/image/mt7621.mk target/linux/ramips/image/mt7621.mk.bak
cp mt7621.f target/linux/ramips/image/mt7621.mk



target\linux\ramips\image

-------------------------------------
18.06.8 sdk 
lean source package 
make menuconfig 
make /xxx/compile V=00




# luci-app-ssr-plus

This is a backup repoistory of luci-app-ssr-plus from Lean's OpenWrt project package.

Lean's OpenWrt source:

<https://github.com/coolsnowwolf/lede/>

Source from tree: 2915c44a11ca0ee40b51ff5d9c18a0da1951e170

Lean's luci-app-ssr-plus source (history):

<https://github.com/coolsnowwolf/lede/tree/2915c44a11ca0ee40b51ff5d9c18a0da1951e170/package/lean/luci-app-ssr-plus>

# 加入lean原版建议重新fork源码 

## 说明
   源码来源：https://github.com/coolsnowwolf

#### 建议搭配opentomato  opentomcat  theme，能有最好的显示体验。（兼容所有Argon魔改主题）

theme : https://github.com/Leo-Jo-My/luci-theme-opentomato

theme : https://github.com/Leo-Jo-My/luci-theme-opentomcat

theme : https://github.com/Leo-Jo-My/luci-theme-Butterfly

# luci-app-ssr-plus-Jo
   
## 使用方法
    #下载源码
    
    git clone https://github.com/Leo-Jo-My/luci-app-ssr-plus-Jo package/luci-app-ssr-plus-Jo
 
    git clone https://github.com/Leo-Jo-My/my package/my  #依赖包
    
    git clone https://github.com/Leo-Jo-My/luci-theme-Butterfly package/luci-theme-Butterfly #主题包
    
    git clone https://github.com/Leo-Jo-My/luci-theme-opentomato package/luci-theme-opentomato #主题包
    
    git clone https://github.com/Leo-Jo-My/luci-theme-opentomcat package/luci-theme-opentomcat  #主题包

    make menuconfig
    #编译
    make package/luci-app-ssr-plus-Jo/{clean,compile} V=s
    
# luci-app-ssr-plus-lean
    
## 原版使用方法
```Brach
    #下载源码
    
    git clone -b lean  https://github.com/Leo-Jo-My/luci-app-ssr-plus-Jo package/lean/luci-app-ssr-plus-lean
    
    git clone https://github.com/Leo-Jo-My/luci-theme-Butterfly package/luci-theme-Butterfly #主题包
    
    git clone https://github.com/Leo-Jo-My/luci-theme-opentomato package/luci-theme-opentomato #主题包
    
    git clone https://github.com/Leo-Jo-My/luci-theme-opentomcat package/luci-theme-opentomcat  #主题包
 
    make menuconfig
    #编译
    make package/luci-app-ssr-plus-lean/{clean,compile} V=s

compile 
OpenWrt 18.06.8

sudo apt-get install gcc g++ build-essential asciidoc  binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch flex bison make autoconf texinfo unzip sharutils subversion ncurses-term zlib1g-dev ccache upx lib32gcc1 libc6-dev-i386 uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev libglib2.0-dev xmlto qemu-utils automake libtool  -y


git clone https://github.com/openwrt/openwrt.git
git checkout openwrt-18.06.8
git checkout -b v18.06.8

$ git fetch  # Make sure your local git repo has the latest commits, branches, and tags
$ git checkout -b v18.06.1
$ ./scripts/feeds update -a
$ ./scripts/feeds install -a


$ git fetch  # Make sure your local git repo has the latest commits, branches, and tags
$ git checkout -b v18.06.1
$ ./scripts/feeds update -a
$ ./scripts/feeds install -a


mkdir openwrt17.1             #新建一个目录
sudo chmod 777 openwrt    #修改权限（重要）

cd        openwrt17.1            #进入目录


 cd source
git clone https://github.com/caonimagfw/openwrt-packages.git

git clone https://github.com/libuv/libuv.git

./scripts/feeds update -a
./scripts/feeds install -a 


 make  defconfig

make tools/install V=s
make package/libs/install V=s

  make V=99


       

git clone https://git.openwrt.org/openwrt/openwrt.git/
cd openwrt
git branch
git branch -v
git branch -r
git checkout openwrt-18.06
./scripts/feeds update -a && ./scripts/feeds install -a
make menuconfig
make V=s 

swap-----
check:
sudo swapon --show
free -h

check freee:
 df -h

 create:
sudo fallocate -l 2G /swapfile
ls -lh /swapfile
sudo chmod 600 /swapfile
ls -lh /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
sudo swapon --show
free -h

keep foreve:
sudo cp /etc/fstab /etc/fstab.bak
echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab

sudo fallocate -l 2G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
sudo swapon --show
free -h


 satisfy_dependencies_for: Cannot satisfy the following dependencies for luci-app-ssr-plus:
 *      shadowsocksr-libev-alt
 *      pdnsd-alt
 *      microsocks
 *      ipt2socks
 *      dns2socks
 *      shadowsocksr-libev-ssr-local
 * opkg_install_cmd: Cannot install package luci-app-ssr-plus.
Makefile:149: recipe for target 'package_install' failed
make[2]: *** [package_install] Error 255
Makefile:108: recipe for target '_call_image' failed
make[1]: *** [_call_image] Error 2
Makefile:192: recipe for target 'image' failed
make: *** [image] Error 2


-----
./scripts/feeds install vsftpd openssh-sftp-server
./scripts/feeds install ttyd luci-app-ttyd luci-i18n-ttyd-zh-cn


_control
sysctl net.ipv4.tcp_congestion_control

sysctl net.ipv4.tcp_available_congestion_control
sysctl -w net.ipv4.tcp_congestion_control=dctcp
sysctl -w net.ipv4.tcp_congestion_control=bbr 

sysctl -w net.ipv4.tcp_congestion_control=bbrplus

sysctl -w net.ipv4.tcp_congestion_control=hybla
sysctl -w net.ipv4.tcp_congestion_control=htcp

sysctl -w net.ipv4.tcp_congestion_control=cubic
/sbin/modprobe tcp_hybla
/sbin/modprobe tcp_htcp
lsmod |grep hybla

hybla   39 22
htcp    33 10
dctcp   36 5
bbr     35 7
cubic   30 29

vi /etc/sysconfig/network-scripts/ifcfg-eth0
systemctl restart network
cat /etc/resov.conf
nslookup 
 yum install -y bind-utils

1.添加dns记录
cd /etc/sysconfig/network-scripts/
找到类似ifcfg-eth0的文件vim打开
添加一行DNS1=114.114.114.114

2.重启网络 nslookup 

3.验证
vim /etc/resov.conf就可以看到添加的dns生效了
————————————————
版权声明：本文为CSDN博主「那年的夏天123」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/hujun_123456/java/article/details/80547208


DNS1=1.1.1.1
DNS2=8.8.8.8
DNS3=2001:4860:4860::8888
DNS4=2001:4860:4860::8844

make kernel_menuconfig


neteasy music:

1.网络设置，找到连入的wifi
2.进入参数设置，找到HTTP PROXY
3.进入Configure Proxy，选择Automatic，URL留空
4.保存
5.打开网易云app，搜索“周杰伦”进行测试，歌曲正常并能正常播放，完成IOS端设置



# 进入某个目录
cd /opt
# 1.3.5 install then feed update and install
# 获取 libuv 源码包 1.35.0
libuv_version="1.32.0" # 定义 libuv 版本号
wget https://github.com/libuv/libuv/archive/v$libuv_version.tar.gz -Olibuv-$libuv_version.tar.gz
tar xvf libuv-$libuv_version.tar.gz

# 进入源码目录，编译
cd libuv-$libuv_version
./autogen.sh
./configure --prefix=/opt/libuv --enable-shared=no --enable-static=yes CC="gcc -O3"
make && sudo make install
cd ..

# 获取 ipt2socks 源码
git clone https://github.com/zfl9/ipt2socks

# 进入源码目录，编译
cd ipt2socks
make INCLUDES="-I/opt/libuv/include" LDFLAGS="-L/opt/libuv/lib" && sudo make install

sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compile

---some app
    luci-app-accesscontrol
    luci-app-adbyby-plus
    luci-app-adguardhome
    luci-app-arpbind
    luci-app-airplay2
    luci-app-autoreboot
    luci-app-guest-wifi
    luci-app-ramfree
    luci-app-shairplay
    luci-app-squid
    luci-app-sqm
    luci-app-ssr-plus
    luci-app-ttyd
    luci-app-vlmcsd
    luci-app-vsftpd
    luci-app-wifischedule
    luci-app-wol
    luci-app-wrtbwmon
    ssr
    ttyd
    wrm
    adhome
--openwrt start from TF